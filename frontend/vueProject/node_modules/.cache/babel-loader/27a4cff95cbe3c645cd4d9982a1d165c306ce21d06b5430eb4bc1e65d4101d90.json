{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport UserService from '../services/authJwt/user.service';\nimport NoteDataService from \"../services/NoteDataService\";\nexport default {\n  name: \"notes-list\",\n  data: function data() {\n    return {\n      notes: [],\n      currentNote: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n      page: 1,\n      count: 0,\n      pageSize: 3,\n      pageSizes: [3, 6, 9]\n    };\n  },\n  methods: {\n    getRequestParams: function getRequestParams(searchTitle, page, pageSize) {\n      var params = {};\n      if (searchTitle) {\n        params[\"searchTitle\"] = searchTitle;\n      }\n      if (page) {\n        params[\"page\"] = page - 1;\n      }\n      if (pageSize) {\n        params[\"size\"] = pageSize;\n      }\n      return params;\n    },\n    retrieveNotes: function retrieveNotes() {\n      var _this = this;\n      var params = this.getRequestParams(this.searchTitle, this.page, this.pageSize);\n      NoteDataService.getAll(params).then(function (response) {\n        var _response$data = response.data,\n          content = _response$data.content,\n          totalItems = _response$data.totalItems;\n        _this.notes = content;\n        _this.count = totalItems;\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    handlePageChange: function handlePageChange(value) {\n      this.page = value;\n      this.retrieveNotes();\n    },\n    handlePageSizeChange: function handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveNotes();\n    },\n    refreshList: function refreshList() {\n      this.retrieveNotes();\n      this.currentNote = null;\n      this.currentIndex = -1;\n    },\n    setActiveNote: function setActiveNote(note, index) {\n      this.currentNote = note;\n      this.currentIndex = note ? index : -1;\n    },\n    removeAllNotes: function removeAllNotes() {\n      var _this2 = this;\n      NoteDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    searchTitle: function searchTitle() {\n      var _this3 = this;\n      NoteDataService.findByTitle(this.searchTitle).then(function (response) {\n        _this3.notes = response.data;\n        _this3.setActiveNote(null);\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n    UserService.getPublicConent().then(function (response) {\n      _this4.content = response.data;\n    }, function (error) {\n      _this4.content = error.response && error.response.data || error.message || error.toString();\n    });\n    this.retrieveNotes();\n  }\n};","map":{"version":3,"names":["UserService","NoteDataService","name","data","notes","currentNote","currentIndex","searchTitle","page","count","pageSize","pageSizes","methods","getRequestParams","params","retrieveNotes","_this","getAll","then","response","_response$data","content","totalItems","console","log","catch","e","handlePageChange","value","handlePageSizeChange","event","target","refreshList","setActiveNote","note","index","removeAllNotes","_this2","deleteAll","_this3","findByTitle","mounted","_this4","getPublicConent","error","message","toString"],"sources":["/home/suhaib/note/frontend/vueProject/src/components/noteList.vue"],"sourcesContent":["<template>\n    <div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by title\"\n          v-model=\"searchTitle\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            @click=\"page = 1; retrieveNotes();\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-12\">\n      <div class=\"mb-3\">\n        Items per Page:\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\n            {{ size }}\n          </option>\n        </select>\n      </div>\n\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        prev-text=\"Prev\"\n        next-text=\"Next\"\n        @change=\"handlePageChange\"\n      ></b-pagination>\n    </div>\n\n      <div class=\"col-md-6\">\n        <h4>Notes List</h4>\n        <ul class=\"list-group\" id=\"notes-list\">\n          <li class=\"list-group-item\"\n            :class=\"{ active: index == currentIndex }\"\n            v-for=\"(note, index) in notes\"\n            :key=\"index\"\n            @click=\"setActiveNote(note, index)\"\n          >\n            {{ note.title }}\n          </li>\n        </ul>\n  \n        <button class=\"m-3 btn btn-sm btn-danger\" @click=\"removeAllNotes\">\n          Remove All\n        </button>\n      </div>\n      <div class=\"col-md-6\">\n        <div v-if=\"currentNote\">\n          <h4>Note</h4>\n          <div>\n            <label><strong>Title:</strong></label> {{ currentNote.title }}\n          </div>\n          <div>\n            <label><strong>Content:</strong></label> {{ currentNote.content }}\n          </div>\n          <div>\n            <label><strong>Label:</strong></label> {{ currentNote.labelName }}\n          </div>\n  \n          <router-link :to=\"'/note/' + currentNote.id\" class=\"badge badge-warning\">Edit</router-link>\n        </div>\n        <div v-else>\n          <br />\n          <p>Please click on a Note...</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import UserService from '../services/authJwt/user.service';\n  import NoteDataService from \"../services/NoteDataService\";\n  \n  export default {\n    name: \"notes-list\",\n    data() {\n      return {\n        notes: [],\n        currentNote: null,\n        currentIndex: -1,\n        searchTitle: \"\",\n\n        page: 1,\n        count: 0,\n        pageSize: 3,\n\n        pageSizes:[3,6,9],\n      };\n    },\n    methods: {\n        getRequestParams(searchTitle, page, pageSize) {\n            let params = {};\n\n            if(searchTitle) {\n                params[\"searchTitle\"] = searchTitle;\n            }\n\n            if (page) {\n                params[\"page\"] = page - 1; \n            }\n\n            if (pageSize) {\n                params[\"size\"] = pageSize;\n            }\n\n            return params;\n        },\n\n      retrieveNotes() {\n        const params =this.getRequestParams(\n            this.searchTitle,\n            this.page,\n            this.pageSize\n        );\n\n        NoteDataService.getAll(params)\n          .then((response) => {\n            const {content, totalItems } = response.data;\n            this.notes = content;\n            this.count = totalItems;\n\n            console.log(response.data);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      },\n\n      handlePageChange(value) {\n        this.page = value;\n        this.retrieveNotes();\n      },\n\n      handlePageSizeChange(event) {\n        this.pageSize = event.target.value;\n        this.page = 1;\n        this.retrieveNotes();\n      },\n  \n      refreshList() {\n        this.retrieveNotes();\n        this.currentNote = null;\n        this.currentIndex = -1;\n      },\n  \n      setActiveNote(note, index) {\n        this.currentNote = note;\n        this.currentIndex = note ? index : -1;\n      },\n  \n      removeAllNotes() {\n        NoteDataService.deleteAll()\n          .then(response => {\n            console.log(response.data);\n            this.refreshList();\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      },\n      \n      searchTitle() {\n        NoteDataService.findByTitle(this.searchTitle)\n          .then(response => {\n            this.notes = response.data;\n            this.setActiveNote(null);\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    },\n    mounted() {\n      UserService.getPublicConent().then(\n        response => {\n          this.content = response.data;\n        },\n        error => {\n          this.content =(error.response && error.response.data) ||\n          error.message || error.toString();\n        }\n      )\n      this.retrieveNotes();\n    }\n  };\n  </script>\n  \n  <style>\n  .list {\n    text-align: left;\n    max-width: 750px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";;AAmFE,OAAOA,WAAU,MAAO,kCAAkC;AAC1D,OAAOC,eAAc,MAAO,6BAA6B;AAEzD,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,CAAC,CAAC;MAChBC,WAAW,EAAE,EAAE;MAEfC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,CAAC;MAEXC,SAAS,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACLC,gBAAgB,WAAAA,iBAACN,WAAW,EAAEC,IAAI,EAAEE,QAAQ,EAAE;MAC1C,IAAII,MAAK,GAAI,CAAC,CAAC;MAEf,IAAGP,WAAW,EAAE;QACZO,MAAM,CAAC,aAAa,IAAIP,WAAW;MACvC;MAEA,IAAIC,IAAI,EAAE;QACNM,MAAM,CAAC,MAAM,IAAIN,IAAG,GAAI,CAAC;MAC7B;MAEA,IAAIE,QAAQ,EAAE;QACVI,MAAM,CAAC,MAAM,IAAIJ,QAAQ;MAC7B;MAEA,OAAOI,MAAM;IACjB,CAAC;IAEHC,aAAa,WAAAA,cAAA,EAAG;MAAA,IAAAC,KAAA;MACd,IAAMF,MAAK,GAAG,IAAI,CAACD,gBAAgB,CAC/B,IAAI,CAACN,WAAW,EAChB,IAAI,CAACC,IAAI,EACT,IAAI,CAACE,QAAO,CACf;MAEDT,eAAe,CAACgB,MAAM,CAACH,MAAM,EAC1BI,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB,IAAAC,cAAA,GAA+BD,QAAQ,CAAChB,IAAI;UAArCkB,OAAO,GAAAD,cAAA,CAAPC,OAAO;UAAEC,UAAS,GAAAF,cAAA,CAATE,UAAS;QACzBN,KAAI,CAACZ,KAAI,GAAIiB,OAAO;QACpBL,KAAI,CAACP,KAAI,GAAIa,UAAU;QAEvBC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAChB,IAAI,CAAC;MAC5B,CAAC,EACAsB,KAAK,CAAC,UAACC,CAAC,EAAK;QACZH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IAEDC,gBAAgB,WAAAA,iBAACC,KAAK,EAAE;MACtB,IAAI,CAACpB,IAAG,GAAIoB,KAAK;MACjB,IAAI,CAACb,aAAa,EAAE;IACtB,CAAC;IAEDc,oBAAoB,WAAAA,qBAACC,KAAK,EAAE;MAC1B,IAAI,CAACpB,QAAO,GAAIoB,KAAK,CAACC,MAAM,CAACH,KAAK;MAClC,IAAI,CAACpB,IAAG,GAAI,CAAC;MACb,IAAI,CAACO,aAAa,EAAE;IACtB,CAAC;IAEDiB,WAAW,WAAAA,YAAA,EAAG;MACZ,IAAI,CAACjB,aAAa,EAAE;MACpB,IAAI,CAACV,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,YAAW,GAAI,CAAC,CAAC;IACxB,CAAC;IAED2B,aAAa,WAAAA,cAACC,IAAI,EAAEC,KAAK,EAAE;MACzB,IAAI,CAAC9B,WAAU,GAAI6B,IAAI;MACvB,IAAI,CAAC5B,YAAW,GAAI4B,IAAG,GAAIC,KAAI,GAAI,CAAC,CAAC;IACvC,CAAC;IAEDC,cAAc,WAAAA,eAAA,EAAG;MAAA,IAAAC,MAAA;MACfpC,eAAe,CAACqC,SAAS,EAAC,CACvBpB,IAAI,CAAC,UAAAC,QAAO,EAAK;QAChBI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAChB,IAAI,CAAC;QAC1BkC,MAAI,CAACL,WAAW,EAAE;MACpB,CAAC,EACAP,KAAK,CAAC,UAAAC,CAAA,EAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IAEDnB,WAAW,WAAAA,YAAA,EAAG;MAAA,IAAAgC,MAAA;MACZtC,eAAe,CAACuC,WAAW,CAAC,IAAI,CAACjC,WAAW,EACzCW,IAAI,CAAC,UAAAC,QAAO,EAAK;QAChBoB,MAAI,CAACnC,KAAI,GAAIe,QAAQ,CAAChB,IAAI;QAC1BoC,MAAI,CAACN,aAAa,CAAC,IAAI,CAAC;QACxBV,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAChB,IAAI,CAAC;MAC5B,CAAC,EACAsB,KAAK,CAAC,UAAAC,CAAA,EAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACN;EACF,CAAC;EACDe,OAAO,WAAAA,QAAA,EAAG;IAAA,IAAAC,MAAA;IACR1C,WAAW,CAAC2C,eAAe,EAAE,CAACzB,IAAI,CAChC,UAAAC,QAAO,EAAK;MACVuB,MAAI,CAACrB,OAAM,GAAIF,QAAQ,CAAChB,IAAI;IAC9B,CAAC,EACD,UAAAyC,KAAI,EAAK;MACPF,MAAI,CAACrB,OAAM,GAAIuB,KAAK,CAACzB,QAAO,IAAKyB,KAAK,CAACzB,QAAQ,CAAChB,IAAI,IACpDyC,KAAK,CAACC,OAAM,IAAKD,KAAK,CAACE,QAAQ,EAAE;IACnC,EACF;IACA,IAAI,CAAC/B,aAAa,EAAE;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}