{"ast":null,"code":"import UserService from '../services/authJwt/user.service';\nimport NoteDataService from \"../services/NoteDataService\";\nexport default {\n  name: \"notes-list\",\n  data: function data() {\n    return {\n      notes: [],\n      labels: [],\n      currentLabel: null,\n      currentNote: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n      page: 1,\n      count: 0,\n      pageSize: 3,\n      pageSizes: [3, 6, 9]\n    };\n  },\n  methods: {\n    getRequestParams: function getRequestParams(searchTitle, page, pageSize) {\n      var params = {};\n      if (searchTitle) {\n        params[\"searchTitle\"] = searchTitle;\n      }\n      if (page) {\n        params[\"page\"] = page - 1;\n      }\n      if (pageSize) {\n        params[\"size\"] = pageSize;\n      }\n      return params;\n    },\n    retrieveNotes: function retrieveNotes() {\n      var _this = this;\n      var params = this.getRequestParams(this.searchTitle, this.page, this.pageSize);\n      NoteDataService.getAll(params).then(function (response) {\n        var _response$data = response.data,\n          content = _response$data.content,\n          totalItems = _response$data.totalItems;\n        _this.notes = content;\n        _this.labels = content;\n        _this.count = totalItems;\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    handlePageChange: function handlePageChange(value) {\n      this.page = value;\n      this.retrieveNotes();\n    },\n    handlePageSizeChange: function handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveNotes();\n    },\n    refreshList: function refreshList() {\n      this.retrieveNotes();\n      this.currentNote = null;\n      this.currentLabel = null;\n      this.currentIndex = -1;\n    },\n    setActiveNote: function setActiveNote(note, index) {\n      this.currentNote = note;\n      this.currentIndex = note ? index : -1;\n    },\n    setActiveLabel: function setActiveLabel(label, index) {\n      this.currentLabel = label;\n      this.currentIndex = label ? index : -1;\n    },\n    removeAllNotes: function removeAllNotes() {\n      var _this2 = this;\n      NoteDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    searchTitle: function searchTitle() {\n      var _this3 = this;\n      NoteDataService.findByTitle(this.searchTitle).then(function (response) {\n        _this3.notes = response.data;\n        _this3.setActiveNote(null);\n        _this3.setActiveLabel(null);\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveNotes();\n  }\n};","map":{"version":3,"names":["UserService","NoteDataService","name","data","notes","labels","currentLabel","currentNote","currentIndex","searchTitle","page","count","pageSize","pageSizes","methods","getRequestParams","params","retrieveNotes","_this","getAll","then","response","_response$data","content","totalItems","console","log","catch","e","handlePageChange","value","handlePageSizeChange","event","target","refreshList","setActiveNote","note","index","setActiveLabel","label","removeAllNotes","_this2","deleteAll","_this3","findByTitle","mounted"],"sources":["src/components/noteList.vue"],"sourcesContent":["<template>\n    <div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by title\"\n          v-model=\"searchTitle\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            @click=\"page = 1; retrieveNotes();\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-12\">\n      <div class=\"mb-3\">\n        Items per Page:\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\n            {{ size }}\n          </option>\n        </select>\n      </div>\n\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        prev-text=\"Prev\"\n        next-text=\"Next\"\n        @change=\"handlePageChange\"\n      ></b-pagination>\n      \n    </div>\n    \n      <div class=\"col-md-6\">\n        <h4>Notes List</h4>\n        <ul class=\"list-group\" id=\"notes-list\">\n          <li class=\"list-group-item\"\n            :class=\"{ active: index == currentIndex }\"\n            v-for=\"(note, index) in notes\"\n            :key=\"index\"\n            @click=\"setActiveNote(note, index)\"\n          >\n            {{ note.note.title }}\n          </li>\n        </ul>\n  \n        <button class=\"m-3 btn btn-sm btn-danger\" @click=\"removeAllNotes\">\n          Remove All\n        </button>\n      </div>\n      <div class=\"col-md-6\">\n        <div v-if=\"currentNote\">\n          <h4>Note</h4>\n          <div>\n            <label><strong>Title:</strong></label> {{ currentNote.note.title }}\n          </div>\n          <div>\n            <label><strong>Content:</strong></label> {{ currentNote.note.content }}\n          </div>\n          <div>\n            <label><strong>Label:</strong></label> {{ currentNote.label.name }}\n          </div>\n  \n          <router-link :to=\"'/note/' + currentNote.note.id\" class=\"badge badge-warning\">Edit</router-link>\n        </div>\n        <div v-else>\n          <br />\n          <p>Please click on a Note...</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import UserService from '../services/authJwt/user.service';\n  import NoteDataService from \"../services/NoteDataService\";\n  \n  export default {\n    name: \"notes-list\",\n    data() {\n      return {\n        notes: [],\n        labels:[],\n        currentLabel:null,\n        currentNote: null,\n        currentIndex: -1,\n        searchTitle: \"\",\n\n        page: 1,\n        count: 0,\n        pageSize: 3,\n\n        pageSizes:[3,6,9],\n      };\n    },\n    methods: {\n        getRequestParams(searchTitle, page, pageSize) {\n            let params = {};\n\n            if(searchTitle) {\n                params[\"searchTitle\"] = searchTitle;\n            }\n\n            if (page) {\n                params[\"page\"] = page - 1; \n            }\n\n            if (pageSize) {\n                params[\"size\"] = pageSize;\n            }\n\n            return params;\n        },\n\n      retrieveNotes() {\n        const params =this.getRequestParams(\n            this.searchTitle,\n            this.page,\n            this.pageSize\n        );\n\n        NoteDataService.getAll(params)\n          .then((response) => {\n            const {content, totalItems } = response.data;\n            this.notes = content;\n            this.labels= content;\n            this.count = totalItems;\n\n            console.log(response.data);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      },\n\n      handlePageChange(value) {\n        this.page = value;\n        this.retrieveNotes();\n      },\n\n      handlePageSizeChange(event) {\n        this.pageSize = event.target.value;\n        this.page = 1;\n        this.retrieveNotes();\n      },\n  \n      refreshList() {\n        this.retrieveNotes();\n        this.currentNote = null;\n        this.currentLabel = null;\n        this.currentIndex = -1;\n      },\n  \n      setActiveNote(note, index) {\n        this.currentNote = note;\n        this.currentIndex = note ? index : -1;\n      },\n\n      setActiveLabel(label, index) {\n        this.currentLabel = label;\n        this.currentIndex = label ? index : -1;\n      },\n  \n      removeAllNotes() {\n        NoteDataService.deleteAll()\n          .then(response => {\n            console.log(response.data);\n            this.refreshList();\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      },\n      \n      searchTitle() {\n        NoteDataService.findByTitle(this.searchTitle)\n          .then(response => {\n            this.notes = response.data;\n            this.setActiveNote(null);\n            this.setActiveLabel(null);\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    },\n    mounted() {\n      this.retrieveNotes();\n    }\n  };\n  </script>\n  \n  <style>\n  .list {\n    text-align: left;\n    max-width: 750px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}